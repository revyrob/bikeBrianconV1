<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="initial-scale=1,user-scalable=no,maximum-scale=1,width=device-width">
        <meta name="mobile-web-app-capable" content="yes">
        <meta name="apple-mobile-web-app-capable" content="yes">
        <link rel="stylesheet" href="css/leaflet.css">
        <link rel="stylesheet" href="css/qgis2web.css"><link rel="stylesheet" href="css/fontawesome-all.min.css">
        <style>
        #map {
            width: 795px;
            height: 711px;
        }
        </style>
        <title></title>
    </head>
    <body>
        <div id="map">
        </div>
        <script src="js/qgis2web_expressions.js"></script>
        <script src="js/leaflet.js"></script>
        <script src="js/leaflet.rotatedMarker.js"></script>
        <script src="js/leaflet.pattern.js"></script>
        <script src="js/leaflet-hash.js"></script>
        <script src="js/Autolinker.min.js"></script>
        <script src="js/rbush.min.js"></script>
        <script src="js/labelgun.min.js"></script>
        <script src="js/labels.js"></script>
        <script src="data/LevalleedeclareeTrail_1.js"></script>
        <script src="data/Tourparles3cols_2.js"></script>
        <script src="data/LesCombesTrail_3.js"></script>
        <script src="data/TorrentdeSacha_4.js"></script>
        <script src="data/LaCassetMonetier_5.js"></script>
        <script src="data/FortdeSalletteVachette_6.js"></script>
        <script src="data/FortTetesBriancon_7.js"></script>
        <script src="data/LeVachetteFortdesTetes_8.js"></script>
        <script src="data/LeBalcon_9.js"></script>
        <script src="data/Trail45_10.js"></script>
        <script src="data/Trail63_11.js"></script>
        <script>
        var map = L.map('map', {
            zoomControl:true, maxZoom:28, minZoom:1
        }).fitBounds([[44.79519358139298,6.413368141692416],[45.0588084517111,6.829815759138341]]);
        var hash = new L.Hash(map);
        map.attributionControl.setPrefix('<a href="https://github.com/tomchadwin/qgis2web" target="_blank">qgis2web</a> &middot; <a href="https://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> &middot; <a href="https://qgis.org">QGIS</a>');
        var autolinker = new Autolinker({truncate: {length: 30, location: 'smart'}});
        var bounds_group = new L.featureGroup([]);
        function setBounds() {
        }
        map.createPane('pane_OpenStreetMap_0');
        map.getPane('pane_OpenStreetMap_0').style.zIndex = 400;
        var layer_OpenStreetMap_0 = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            pane: 'pane_OpenStreetMap_0',
            opacity: 1.0,
            attribution: '',
            minZoom: 1,
            maxZoom: 28,
            minNativeZoom: 0,
            maxNativeZoom: 19
        });
        layer_OpenStreetMap_0;
        map.addLayer(layer_OpenStreetMap_0);
        function pop_LevalleedeclareeTrail_1(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['fid'] !== null ? autolinker.link(feature.properties['fid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Name</th>\
                        <td>' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Description'] !== null ? autolinker.link(feature.properties['Description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_LevalleedeclareeTrail_1_0() {
            return {
                pane: 'pane_LevalleedeclareeTrail_1',
                opacity: 1,
                color: 'rgba(5,15,164,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_LevalleedeclareeTrail_1');
        map.getPane('pane_LevalleedeclareeTrail_1').style.zIndex = 401;
        map.getPane('pane_LevalleedeclareeTrail_1').style['mix-blend-mode'] = 'normal';
        var layer_LevalleedeclareeTrail_1 = new L.geoJson(json_LevalleedeclareeTrail_1, {
            attribution: '',
            interactive: true,
            dataVar: 'json_LevalleedeclareeTrail_1',
            layerName: 'layer_LevalleedeclareeTrail_1',
            pane: 'pane_LevalleedeclareeTrail_1',
            onEachFeature: pop_LevalleedeclareeTrail_1,
            style: style_LevalleedeclareeTrail_1_0,
        });
        bounds_group.addLayer(layer_LevalleedeclareeTrail_1);
        map.addLayer(layer_LevalleedeclareeTrail_1);
        function pop_Tourparles3cols_2(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Tourparles3cols_2_0() {
            return {
                pane: 'pane_Tourparles3cols_2',
                opacity: 1,
                color: 'rgba(1,2,1,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_Tourparles3cols_2');
        map.getPane('pane_Tourparles3cols_2').style.zIndex = 402;
        map.getPane('pane_Tourparles3cols_2').style['mix-blend-mode'] = 'normal';
        var layer_Tourparles3cols_2 = new L.geoJson(json_Tourparles3cols_2, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Tourparles3cols_2',
            layerName: 'layer_Tourparles3cols_2',
            pane: 'pane_Tourparles3cols_2',
            onEachFeature: pop_Tourparles3cols_2,
            style: style_Tourparles3cols_2_0,
        });
        bounds_group.addLayer(layer_Tourparles3cols_2);
        map.addLayer(layer_Tourparles3cols_2);
        function pop_LesCombesTrail_3(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['fid'] !== null ? autolinker.link(feature.properties['fid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Name</th>\
                        <td>' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Desciption'] !== null ? autolinker.link(feature.properties['Desciption'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_LesCombesTrail_3_0() {
            return {
                pane: 'pane_LesCombesTrail_3',
                opacity: 1,
                color: 'rgba(204,4,34,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_LesCombesTrail_3');
        map.getPane('pane_LesCombesTrail_3').style.zIndex = 403;
        map.getPane('pane_LesCombesTrail_3').style['mix-blend-mode'] = 'normal';
        var layer_LesCombesTrail_3 = new L.geoJson(json_LesCombesTrail_3, {
            attribution: '',
            interactive: true,
            dataVar: 'json_LesCombesTrail_3',
            layerName: 'layer_LesCombesTrail_3',
            pane: 'pane_LesCombesTrail_3',
            onEachFeature: pop_LesCombesTrail_3,
            style: style_LesCombesTrail_3_0,
        });
        bounds_group.addLayer(layer_LesCombesTrail_3);
        map.addLayer(layer_LesCombesTrail_3);
        function pop_TorrentdeSacha_4(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['name'] !== null ? autolinker.link(feature.properties['name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cmt'] !== null ? autolinker.link(feature.properties['cmt'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['desc'] !== null ? autolinker.link(feature.properties['desc'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['src'] !== null ? autolinker.link(feature.properties['src'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['link1_href'] !== null ? autolinker.link(feature.properties['link1_href'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['link1_text'] !== null ? autolinker.link(feature.properties['link1_text'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['link1_type'] !== null ? autolinker.link(feature.properties['link1_type'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['link2_href'] !== null ? autolinker.link(feature.properties['link2_href'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['link2_text'] !== null ? autolinker.link(feature.properties['link2_text'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['link2_type'] !== null ? autolinker.link(feature.properties['link2_type'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['number'] !== null ? autolinker.link(feature.properties['number'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['type'] !== null ? autolinker.link(feature.properties['type'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_TorrentdeSacha_4_0() {
            return {
                pane: 'pane_TorrentdeSacha_4',
                opacity: 1,
                color: 'rgba(204,4,34,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_TorrentdeSacha_4');
        map.getPane('pane_TorrentdeSacha_4').style.zIndex = 404;
        map.getPane('pane_TorrentdeSacha_4').style['mix-blend-mode'] = 'normal';
        var layer_TorrentdeSacha_4 = new L.geoJson(json_TorrentdeSacha_4, {
            attribution: '',
            interactive: true,
            dataVar: 'json_TorrentdeSacha_4',
            layerName: 'layer_TorrentdeSacha_4',
            pane: 'pane_TorrentdeSacha_4',
            onEachFeature: pop_TorrentdeSacha_4,
            style: style_TorrentdeSacha_4_0,
        });
        bounds_group.addLayer(layer_TorrentdeSacha_4);
        map.addLayer(layer_TorrentdeSacha_4);
        function pop_LaCassetMonetier_5(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_LaCassetMonetier_5_0() {
            return {
                pane: 'pane_LaCassetMonetier_5',
                opacity: 1,
                color: 'rgba(10,153,10,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_LaCassetMonetier_5');
        map.getPane('pane_LaCassetMonetier_5').style.zIndex = 405;
        map.getPane('pane_LaCassetMonetier_5').style['mix-blend-mode'] = 'normal';
        var layer_LaCassetMonetier_5 = new L.geoJson(json_LaCassetMonetier_5, {
            attribution: '',
            interactive: true,
            dataVar: 'json_LaCassetMonetier_5',
            layerName: 'layer_LaCassetMonetier_5',
            pane: 'pane_LaCassetMonetier_5',
            onEachFeature: pop_LaCassetMonetier_5,
            style: style_LaCassetMonetier_5_0,
        });
        bounds_group.addLayer(layer_LaCassetMonetier_5);
        map.addLayer(layer_LaCassetMonetier_5);
        function pop_FortdeSalletteVachette_6(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_FortdeSalletteVachette_6_0() {
            return {
                pane: 'pane_FortdeSalletteVachette_6',
                opacity: 1,
                color: 'rgba(204,4,34,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_FortdeSalletteVachette_6');
        map.getPane('pane_FortdeSalletteVachette_6').style.zIndex = 406;
        map.getPane('pane_FortdeSalletteVachette_6').style['mix-blend-mode'] = 'normal';
        var layer_FortdeSalletteVachette_6 = new L.geoJson(json_FortdeSalletteVachette_6, {
            attribution: '',
            interactive: true,
            dataVar: 'json_FortdeSalletteVachette_6',
            layerName: 'layer_FortdeSalletteVachette_6',
            pane: 'pane_FortdeSalletteVachette_6',
            onEachFeature: pop_FortdeSalletteVachette_6,
            style: style_FortdeSalletteVachette_6_0,
        });
        bounds_group.addLayer(layer_FortdeSalletteVachette_6);
        map.addLayer(layer_FortdeSalletteVachette_6);
        function pop_FortTetesBriancon_7(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_FortTetesBriancon_7_0() {
            return {
                pane: 'pane_FortTetesBriancon_7',
                opacity: 1,
                color: 'rgba(5,15,164,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_FortTetesBriancon_7');
        map.getPane('pane_FortTetesBriancon_7').style.zIndex = 407;
        map.getPane('pane_FortTetesBriancon_7').style['mix-blend-mode'] = 'normal';
        var layer_FortTetesBriancon_7 = new L.geoJson(json_FortTetesBriancon_7, {
            attribution: '',
            interactive: true,
            dataVar: 'json_FortTetesBriancon_7',
            layerName: 'layer_FortTetesBriancon_7',
            pane: 'pane_FortTetesBriancon_7',
            onEachFeature: pop_FortTetesBriancon_7,
            style: style_FortTetesBriancon_7_0,
        });
        bounds_group.addLayer(layer_FortTetesBriancon_7);
        map.addLayer(layer_FortTetesBriancon_7);
        function pop_LeVachetteFortdesTetes_8(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_LeVachetteFortdesTetes_8_0() {
            return {
                pane: 'pane_LeVachetteFortdesTetes_8',
                opacity: 1,
                color: 'rgba(10,153,10,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_LeVachetteFortdesTetes_8');
        map.getPane('pane_LeVachetteFortdesTetes_8').style.zIndex = 408;
        map.getPane('pane_LeVachetteFortdesTetes_8').style['mix-blend-mode'] = 'normal';
        var layer_LeVachetteFortdesTetes_8 = new L.geoJson(json_LeVachetteFortdesTetes_8, {
            attribution: '',
            interactive: true,
            dataVar: 'json_LeVachetteFortdesTetes_8',
            layerName: 'layer_LeVachetteFortdesTetes_8',
            pane: 'pane_LeVachetteFortdesTetes_8',
            onEachFeature: pop_LeVachetteFortdesTetes_8,
            style: style_LeVachetteFortdesTetes_8_0,
        });
        bounds_group.addLayer(layer_LeVachetteFortdesTetes_8);
        map.addLayer(layer_LeVachetteFortdesTetes_8);
        function pop_LeBalcon_9(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_LeBalcon_9_0() {
            return {
                pane: 'pane_LeBalcon_9',
                opacity: 1,
                color: 'rgba(1,2,1,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_LeBalcon_9');
        map.getPane('pane_LeBalcon_9').style.zIndex = 409;
        map.getPane('pane_LeBalcon_9').style['mix-blend-mode'] = 'normal';
        var layer_LeBalcon_9 = new L.geoJson(json_LeBalcon_9, {
            attribution: '',
            interactive: true,
            dataVar: 'json_LeBalcon_9',
            layerName: 'layer_LeBalcon_9',
            pane: 'pane_LeBalcon_9',
            onEachFeature: pop_LeBalcon_9,
            style: style_LeBalcon_9_0,
        });
        bounds_group.addLayer(layer_LeBalcon_9);
        map.addLayer(layer_LeBalcon_9);
        function pop_Trail45_10(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Trail45_10_0() {
            return {
                pane: 'pane_Trail45_10',
                opacity: 1,
                color: 'rgba(5,15,164,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_Trail45_10');
        map.getPane('pane_Trail45_10').style.zIndex = 410;
        map.getPane('pane_Trail45_10').style['mix-blend-mode'] = 'normal';
        var layer_Trail45_10 = new L.geoJson(json_Trail45_10, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Trail45_10',
            layerName: 'layer_Trail45_10',
            pane: 'pane_Trail45_10',
            onEachFeature: pop_Trail45_10,
            style: style_Trail45_10_0,
        });
        bounds_group.addLayer(layer_Trail45_10);
        map.addLayer(layer_Trail45_10);
        function pop_Trail63_11(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Trail63_11_0() {
            return {
                pane: 'pane_Trail63_11',
                opacity: 1,
                color: 'rgba(2,1,1,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_Trail63_11');
        map.getPane('pane_Trail63_11').style.zIndex = 411;
        map.getPane('pane_Trail63_11').style['mix-blend-mode'] = 'normal';
        var layer_Trail63_11 = new L.geoJson(json_Trail63_11, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Trail63_11',
            layerName: 'layer_Trail63_11',
            pane: 'pane_Trail63_11',
            onEachFeature: pop_Trail63_11,
            style: style_Trail63_11_0,
        });
        bounds_group.addLayer(layer_Trail63_11);
        map.addLayer(layer_Trail63_11);
        setBounds();
        resetLabels([layer_LevalleedeclareeTrail_1,layer_LesCombesTrail_3]);
        map.on("zoomend", function(){
            resetLabels([layer_LevalleedeclareeTrail_1,layer_LesCombesTrail_3]);
        });
        map.on("layeradd", function(){
            resetLabels([layer_LevalleedeclareeTrail_1,layer_LesCombesTrail_3]);
        });
        map.on("layerremove", function(){
            resetLabels([layer_LevalleedeclareeTrail_1,layer_LesCombesTrail_3]);
        });
        </script>
    </body>
</html>
